BROKER SCHEMA Qiwa.Framework.Lib



CREATE COMPUTE MODULE SendSMSNotification_PrepareSMSNotifactionMessage

	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();

		CREATE LASTCHILD OF OutputRoot DOMAIN ('XMLNSC');
		
		SET OutputRoot.XMLNSC.SendSMSM.Header.TransactionId = Environment.ESB.Notification.SMS.Header.TransactionId;

		DECLARE rOutputHeader REFERENCE TO OutputRoot.XMLNSC.SendSMS.Header;

		SET rOutputHeader.ServiceCode = '31030029';
		SET rOutputHeader.ChannelId ='ESB';
		SET rOutputHeader.mode = 1;
		

			SET rOutputHeader.ChannelUserInfo = Environment.ESB.Notification.SMS.Header.ChannelUserInfo;

		
		
		DECLARE sendSMSRqRef REFERENCE TO OutputRoot.XMLNSC.SendSMS.Body;

		DECLARE smsNotificationCount INT CARDINALITY(Environment.ESB.Notification.SMS.MESSAGE[]);
		
		DECLARE smsNotificationIndex INT 1;
		
		WHILE  smsNotificationIndex <= smsNotificationCount DO
		
			SET sendSMSRqRef.msgDescription= Environment.ESB.Notification.SMS.MESSAGE[smsNotificationIndex].Content;

			SET sendSMSRqRef.msisdnList= Environment.ESB.Notification.SMS.MESSAGE[smsNotificationIndex].msisdnList;

			SET sendSMSRqRef.msgOriginator = Environment.ESB.Notification.SMS.MESSAGE[smsNotificationIndex].Sender;

			PROPAGATE TO TERMINAL 'out' DELETE NONE;
		
			SET smsNotificationIndex = smsNotificationIndex + 1;
		
		END WHILE;
		
		
		RETURN FALSE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;