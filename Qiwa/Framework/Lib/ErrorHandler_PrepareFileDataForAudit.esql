

BROKER SCHEMA Qiwa.Framework.Lib

DECLARE FILE_SCHEMA_ERROR SHARED BOOLEAN FALSE;
CREATE COMPUTE MODULE ErrorHandler_PrepareFileDataForAudit
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		CREATE LASTCHILD OF OutputRoot.XMLNSC.FILE.Header NAME 'Header';
		CREATE LASTCHILD OF OutputRoot.XMLNSC.FILE.Body NAME 'Body';
		DECLARE outHeaderRef REFERENCE TO OutputRoot.XMLNSC.FILE.Header;
		DECLARE outBodyRef REFERENCE TO OutputRoot.XMLNSC.FILE.Body;
		DECLARE InHeader REFERENCE TO Environment.Variables.Header;		 
		
		 
		 


		IF Environment.Variables.esb.errorType = 'FileInputCatch' THEN
			CALL CREATE_ESBXML_RESPONSE_HEADER('E0199999',InHeader,outHeaderRef);
		ELSE
			CALL Create_esbXML_Response_Header('E0SCHEMA',InHeader,outHeaderRef);
		END IF;	
		
		SET outBodyRef.fileName = Environment.Variables.AuditBody.fileName;
		SET outBodyRef.directory = Environment.Variables.AuditBody.directory;
		
		SET FILE_SCHEMA_ERROR = TRUE;	 
		-- CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;